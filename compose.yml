# This is a Docker Compose file for the InfluxData documentation site.
## Run documentation tests for code samples.
name: influxdb3_plugins
services:
  influxdb3-core:
    container_name: plugins-core
    image: influxdb:3-core
    ports:
      - ${INFLUXDB3_HOST_PORT:-8181}:${INFLUXDB3_CONTAINER_PORT:-8181}
    env_file:
      - .env.core
    environment:
      - PLUGIN_DIR=/host
      - INFLUXDB3_CONTAINER_PORT=${INFLUXDB3_CONTAINER_PORT:-8181}
    command:
      - influxdb3
      - serve
      - --node-id=node0
      - --log-filter=debug
      - --object-store=file
      - --data-dir=/var/lib/influxdb3/data
      - --plugin-dir=/host
      - --without-auth
      - --http-bind=0.0.0.0:${INFLUXDB3_CONTAINER_PORT:-8181}
    volumes:
      - type: bind
        source: .
        target: /host
    tmpfs:
      - /var/lib/influxdb3/data:size=1g,mode=1777

  influxdb3-enterprise:
    container_name: plugins-enterprise
    image: influxdb:3-enterprise
    ports:
      - ${INFLUXDB3_ENTERPRISE_HOST_PORT:-8182}:${INFLUXDB3_ENTERPRISE_CONTAINER_PORT:-8181}
    env_file:
      - .env.ent
    environment:
      - PLUGIN_DIR=/host
      - INFLUXDB3_CONTAINER_PORT=${INFLUXDB3_ENTERPRISE_CONTAINER_PORT:-8181}
    command:
      - influxdb3
      - serve
      - --node-id=node0
      - --log-filter=debug
      - --object-store=file
      - --data-dir=/var/lib/influxdb3/data
      - --plugin-dir=/host
      - --without-auth
      - --http-bind=0.0.0.0:${INFLUXDB3_ENTERPRISE_CONTAINER_PORT:-8181}
    volumes:
      - type: bind
        source: .
        target: /host
    tmpfs:
      - /var/lib/influxdb3/data:size=1g,mode=1777

  # Python test runner service (generic for both core and enterprise)
  plugin-tester:
    container_name: plugin-tester
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - INFLUXDB3_HOST_URL=${INFLUXDB3_HOST_URL:-http://influxdb3-core:8181}
      - INFLUXDB3_HOST_PORT=${INFLUXDB3_HOST_PORT:-8181}
      - INFLUXDB3_CONTAINER_PORT=${INFLUXDB3_CONTAINER_PORT:-8181}
      - INFLUXDB3_DATABASE_NAME=${INFLUXDB3_DATABASE_NAME:-testdb}
      - PLUGIN_DIR=/plugins
      - SKIP_CONTAINER_MANAGEMENT=true  # Don't try to manage Docker from inside container
    volumes:
      - type: bind
        source: .
        target: /plugins
    networks:
      - default
    command: ["python", "/plugins/test/test_plugins.py", "--help"]

  # Test services for InfluxDB 3 Core
  test-core-all:
    extends: plugin-tester
    profiles: ["test"]
    depends_on:
      - influxdb3-core
    environment:
      - INFLUXDB3_HOST_URL=http://influxdb3-core:8181
      - PLUGIN_DIR=/plugins
    command: ["python", "/plugins/test/test_plugins.py", "influxdata", "--core", "--skip-container"]

  test-core-specific:
    extends: plugin-tester
    profiles: ["test"]
    depends_on:
      - influxdb3-core
    environment:
      - INFLUXDB3_HOST_URL=http://influxdb3-core:8181
      - PLUGIN_DIR=/plugins
      - PLUGIN_PATH=${PLUGIN_PATH:-influxdata/basic_transformation}
    command: ["sh", "-c", "python /plugins/test/test_plugins.py \"${PLUGIN_PATH}\" --skip-container"]

  test-core-toml:
    extends: plugin-tester
    profiles: ["test"]
    depends_on:
      - influxdb3-core
    environment:
      - INFLUXDB3_HOST_URL=http://influxdb3-core:8181
      - PLUGIN_PATH=${PLUGIN_PATH:-influxdata/basic_transformation}
      - PLUGIN_FILE=${PLUGIN_FILE:-basic_transformation.py}
      - TOML_CONFIG=${TOML_CONFIG:-}
      - PACKAGES=${PACKAGES:-pint}
    command: ["sh", "-c", "python /plugins/test/test_plugin_toml.py \"${PLUGIN_PATH}\" \"${PLUGIN_FILE}\" ${TOML_CONFIG:+--toml-config \"${TOML_CONFIG}\"} --packages ${PACKAGES}"]

  # Test services for InfluxDB 3 Enterprise
  test-enterprise-all:
    extends: plugin-tester
    profiles: ["test"]
    depends_on:
      - influxdb3-enterprise
    environment:
      - INFLUXDB3_HOST_URL=http://influxdb3-enterprise:8181
      - PLUGIN_DIR=/plugins
    command: ["python", "/plugins/test/test_plugins.py", "influxdata", "--enterprise", "--skip-container"]

  test-enterprise-specific:
    extends: plugin-tester
    profiles: ["test"]
    depends_on:
      - influxdb3-enterprise
    environment:
      - INFLUXDB3_HOST_URL=http://influxdb3-enterprise:8181
      - PLUGIN_DIR=/plugins
      - PLUGIN_PATH=${PLUGIN_PATH:-influxdata/basic_transformation}
    command: ["sh", "-c", "python /plugins/test/test_plugins.py \"${PLUGIN_PATH}\" --skip-container"]

  test-enterprise-toml:
    extends: plugin-tester
    profiles: ["test"]
    depends_on:
      - influxdb3-enterprise
    environment:
      - INFLUXDB3_HOST_URL=http://influxdb3-enterprise:8181
      - PLUGIN_PATH=${PLUGIN_PATH:-influxdata/basic_transformation}
      - PLUGIN_FILE=${PLUGIN_FILE:-basic_transformation.py}
      - TOML_CONFIG=${TOML_CONFIG:-}
      - PACKAGES=${PACKAGES:-pint}
    command: ["sh", "-c", "python /plugins/test/test_plugin_toml.py \"${PLUGIN_PATH}\" \"${PLUGIN_FILE}\" ${TOML_CONFIG:+--toml-config \"${TOML_CONFIG}\"} --packages ${PACKAGES}"]

  # Markdown formatting service
  markdownfmt:
    container_name: markdownfmt
    image: tianon/markdownfmt
    profiles: ["format"]
    volumes:
      - type: bind
        source: .
        target: /workspace
    working_dir: /workspace
    command: ["sh", "-c", "find . -name '*.md' -not -path './node_modules/*' -not -path './.git/*' -exec markdownfmt -w {} +"]
